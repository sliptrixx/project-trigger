"use strict";(self.webpackChunkproject_trigger=self.webpackChunkproject_trigger||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Tutorial Intro","href":"/project-trigger/docs/intro","docId":"intro"},{"type":"category","label":"Advanced Tutorials","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Tutorial: Scores","href":"/project-trigger/docs/Advanced Tutorials/scores","docId":"Advanced Tutorials/scores"},{"type":"link","label":"Tutorial: Spritesheet Animation","href":"/project-trigger/docs/Advanced Tutorials/spritesheet","docId":"Advanced Tutorials/spritesheet"},{"type":"link","label":"Tutorial: Bounds","href":"/project-trigger/docs/Advanced Tutorials/bounds","docId":"Advanced Tutorials/bounds"},{"type":"link","label":"Tutorial: Screen Shake","href":"/project-trigger/docs/Advanced Tutorials/ScreenShake","docId":"Advanced Tutorials/ScreenShake"},{"type":"link","label":"Tutorial: Particle Effects","href":"/project-trigger/docs/Advanced Tutorials/ParticleEffects","docId":"Advanced Tutorials/ParticleEffects"}]},{"type":"category","label":"Basic Tutorials","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Tutorial: Player Movement","href":"/project-trigger/docs/Basic Tutorials/player_movement","docId":"Basic Tutorials/player_movement"},{"type":"link","label":"Tutorial: Projectiles","href":"/project-trigger/docs/Basic Tutorials/projectile","docId":"Basic Tutorials/projectile"},{"type":"link","label":"Tutorial: Player Shoot","href":"/project-trigger/docs/Basic Tutorials/player_shoot","docId":"Basic Tutorials/player_shoot"},{"type":"link","label":"Tutorial: Collision Detection","href":"/project-trigger/docs/Basic Tutorials/collision_detection","docId":"Basic Tutorials/collision_detection"},{"type":"link","label":"Tutorial: Health","href":"/project-trigger/docs/Basic Tutorials/health","docId":"Basic Tutorials/health"},{"type":"link","label":"Tutorial: Basic Enemy","href":"/project-trigger/docs/Basic Tutorials/basic_enemy","docId":"Basic Tutorials/basic_enemy"},{"type":"link","label":"Tutorial: Stages","href":"/project-trigger/docs/Basic Tutorials/stages","docId":"Basic Tutorials/stages"},{"type":"link","label":"Tutorial: HUD","href":"/project-trigger/docs/Basic Tutorials/hud","docId":"Basic Tutorials/hud"},{"type":"link","label":"Tutorial: Audio","href":"/project-trigger/docs/Basic Tutorials/audio","docId":"Basic Tutorials/audio"}]}]},"docs":{"Advanced Tutorials/bounds":{"id":"Advanced Tutorials/bounds","title":"Tutorial: Bounds","description":"In this short tutorial, we will discuss how we can use a BoundsCheck script to keep any gameobject within the bounds of the screen. This is useful for 2D games where the camera is confined to a specific area. For example, our top-down shooter game.","sidebar":"tutorialSidebar"},"Advanced Tutorials/ParticleEffects":{"id":"Advanced Tutorials/ParticleEffects","title":"Tutorial: Particle Effects","description":"In this tutorial, we will have a brief look at the particle system in Unity. The particle system is a very powerful tool that can be used to configure and create a wide variety of effects that can add a lot of polish to your game. In this tutorial, we will be looking at how we can manipulate the particle system to create a simple explosion effect that we can use when an enemy dies.","sidebar":"tutorialSidebar"},"Advanced Tutorials/scores":{"id":"Advanced Tutorials/scores","title":"Tutorial: Scores","description":"In this tutorial, we go over how to add a score system to our game and display it on the screen. We will also learn how to save the high score to persistent memory so that it is not lost when the game is closed.","sidebar":"tutorialSidebar"},"Advanced Tutorials/ScreenShake":{"id":"Advanced Tutorials/ScreenShake","title":"Tutorial: Screen Shake","description":"In this short tutorial, we will discuss how we can use a CameraShake script to shake the camera when an event occurs. This is useful in games to add a bit of excitement to them. We will be primarily looking at an implementation technique that works for a fixed 2D camera. This is not the only way to implement screen shake, but it is a simple and effective way to do it.","sidebar":"tutorialSidebar"},"Advanced Tutorials/spritesheet":{"id":"Advanced Tutorials/spritesheet","title":"Tutorial: Spritesheet Animation","description":"One of the ways to make a game more engaging is to add animations to it. Animations can be used to make a game more visually appealing and to communicate more information to the player. For example, let\'s take a first person shooter with a weapon that can overheat. A UI element to show the player that the weapon is overheating would be enough, but an animation of the weapon releaseing smoke would be more interesting.","sidebar":"tutorialSidebar"},"Basic Tutorials/audio":{"id":"Basic Tutorials/audio","title":"Tutorial: Audio","description":"In this tutorial, we will be adding audio to our game to make it more immersive. We will start simply by adding two sound effects to our game: one for when a blaster shoots and one for when an enemy is destroyed. We will go over two different implementations and you can choose which one you prefer.","sidebar":"tutorialSidebar"},"Basic Tutorials/basic_enemy":{"id":"Basic Tutorials/basic_enemy","title":"Tutorial: Basic Enemy","description":"In this section, we will go over how we can create a basic enemy that can move left and right and shoot bullets at a constant rate. We will reuse a lot of code we have written in the previous sections and learn how powerful modular single-responsibility code can be.","sidebar":"tutorialSidebar"},"Basic Tutorials/collision_detection":{"id":"Basic Tutorials/collision_detection","title":"Tutorial: Collision Detection","description":"In this section, we will go over how to detect collision between two GameObject in Unity and how to use the collision information to create more behaviors for our game.","sidebar":"tutorialSidebar"},"Basic Tutorials/health":{"id":"Basic Tutorials/health","title":"Tutorial: Health","description":"In this section, we will go over how we can modify our code and design developer-friendly APIs to make our code more reusable and functional. We will do this by adding a health functionality to our little game using a health component.","sidebar":"tutorialSidebar"},"Basic Tutorials/hud":{"id":"Basic Tutorials/hud","title":"Tutorial: HUD","description":"One of the most important aspects of a game is the UI. In this tutorial, we will create a simple HUD that displays the player\'s health and the current stage they are on. Later, we will also add game over and stage complete screens.","sidebar":"tutorialSidebar"},"Basic Tutorials/player_movement":{"id":"Basic Tutorials/player_movement","title":"Tutorial: Player Movement","description":"In this section, we will learn how to create a simple player script and attach it to an object in the scene to move it left and right.","sidebar":"tutorialSidebar"},"Basic Tutorials/player_shoot":{"id":"Basic Tutorials/player_shoot","title":"Tutorial: Player Shoot","description":"In this section, we will learn how to create new scripts and modify existing scripts to allow the player to shoot projectiles created in the last section.","sidebar":"tutorialSidebar"},"Basic Tutorials/projectile":{"id":"Basic Tutorials/projectile","title":"Tutorial: Projectiles","description":"In this section, we will learn how to build a simple script that represents a projectile that can be fired from a weapon.","sidebar":"tutorialSidebar"},"Basic Tutorials/stages":{"id":"Basic Tutorials/stages","title":"Tutorial: Stages","description":"Now that we have a simple enemies setup, we can start to add some more complexity to our game. In this tutorial, we will add a stage system to our game that will allow us to have multiple levels and automatically switch levels when the player eliminates all enemies in the current level.","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Tutorial Intro","description":"Hi, and thanks for checking out Project Trigger. This tutorial will walk you through the basics of building a simple 2D shooter game in Unity. Although this tutorial is written for Unity, the concepts are applicable to any game engine. The tutorial uses \\"space\\" assets from Kenney.nl, so is themed as a space shooter. However, feel free to experiment with custom assets and themes.","sidebar":"tutorialSidebar"}}}')}}]);